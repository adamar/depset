#!/bin/bash
#
# Example:
# 
#   "github.com/stretchr/testify"
#
# should become:
#
#   testify "github.com/stretchr/testify-9a3bde9" //depset
#

set -e


usage() { 
cat<<EOF

    DepSet

    Usage:
      depset [commands]

    Commands:

      freeze - Save all dependencies to current version and 
               alias all imports


EOF

}


_init() {

  if [ -z "$GOROOT" ]; then
    echo "# GOROOT not set"
    exit 1
  fi

  if [ -z "$GOPATH" ]; then
    echo "GOPATH not set"
    exit 1
  fi

}




freeze_all_deps() {

  local deps=($(grep "github.com\|gopkg.in\|code.google.com\|bitbucket.org\|azul3d.org" ${1} | sed -e 's/\"//' -e 's/\"//'))
  local dep

  for dep in "${deps[@]}"
  do
    echo "# found ${dep} in your golang file"
    _freeze_single_dep ${dep}
  done

}


_show_git_root() {

  cd ${1}
  local base=`git rev-parse --show-toplevel`
  echo ${base}
  
}


_get_short_hash() {

  cd ${1}
  local hash=`git rev-parse --short HEAD`
  echo ${hash}

}


_freeze_single_dep() {

  local import="${1}"
  local fullpath="${GOPATH}/src/${import}"

  echo "# Searching for ${fullpath}"
  if [ -d "${fullpath}" ]; then
    ## lib exists on disk
    local root=$(_show_git_root "${fullpath}")
    #echo "# Git root is ${root}"
    local shorthash=$(_get_short_hash "${fullpath}")   
    #echo "# The git hash of this lib is ${shorthash}"
    if [ ! -d "${root}-${shorthash}" ]; then
      ## Lib exists on disk, but hasnt been frozen yet
      cp -a ${root} ${root}-${shorthash}
    fi
  else
    ## lib doesnt exist on disk
    go get ${import}
    local root=$(_show_git_root "${fullpath}")
    cp -a ${root} ${root}-${shorthash}
  fi

}

for arg in "$@" ; do
  case "$arg" in
    freeze)
      freeze_all_deps ${2}
      echo ${1}
      echo ${2}
      shift
      ;;
    usage)
      _usage
      shift
      ;;
    update)
      echo "sorry, not built yet..."
      shift
      ;;
  esac
done








